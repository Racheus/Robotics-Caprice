clear;
clc;
% %机器人建模
th(1) = 0; d(1) = 0.2/2.8;   a(1) = -0.220/2.8;  alp(1) = pi/2;
th(2) = 0; d(2) = 0;     a(2) = -1.069/2.8; alp(2) = 0;   
th(3) = 0; d(3) = 0.1/2.8;   a(3) = 0;      alp(3) = -pi/2;
th(4) = 0; d(4) = 1.04/2.8;  a(4) = 0;      alp(4) = pi/2;
th(5) = 0; d(5) = 0;     a(5) = 0;      alp(5) = pi/2;
th(6) = 0; d(6) = 0.495/2.8; a(6) = 0;      alp(6) = pi;
% DH parameters  th     d    a    alpha  sigma
L(1) = Link([th(1), d(1), a(1), alp(1), 0], 'revolute');
L(2) = Link([th(2), d(2), a(2), alp(2), 0], 'revolute');L(2).offset=-pi/2;
L(3) = Link([th(3), d(3), a(3), alp(3), 0], 'revolute');
L(4) = Link([th(4), d(4), a(4), alp(4), 0], 'revolute');L(4).offset=pi;
L(5) = Link([th(5), d(5), a(5), alp(5), 0], 'revolute');L(5).offset=-pi;
L(6) = Link([th(6), d(6), a(6), alp(6), 0], 'revolute');

%动力学参量，质量，质心位置和惯量矩阵，其中末端质量加上了负载的3kg
L(1).r=[0.09851,0.27522,0.18156];
L(1).m=0.41418;
L(1).Jm=2.2e-4;
L(1).I=10^(-9)*[1734891.83 -184792.26 -86325.71;
    -184792.26 2376522.66 172929.64;
    -86325.71 172929.64 1252382.38];

L(2).r=[-0.00925,0.53218,0.17848];
L(2).m=0.52455;
L(2).Jm=2.2e-4;
L(2).I=10^(-9)*[11839437.44 -930504.09 -23887.6;
    -930504.09 1072895.45 -76643.7;
    -23887.6 -76643.7 11930866.95];

L(3).r=[0.10246,0.68597,0.13014];
L(3).m=0.45030;
L(3).Jm=2.2e-4;
L(3).G=-53.70364;
L(3).I=10^(-9)*[2052918.21 -186784.56 -928086.57;
    -186784.56 2731992.7 164232.49;
    -928086.57 164232.49 2168655.87];

L(4).r=[0.20975,0.66891,-0.005];
L(4).m=0.34716;
L(4).Jm=2.2e-4;
L(4).I=10^(-9)*[1379297.73 -51681.67 -291688.61;
    -51681.67 2000353.98 110826.92;
    -291688.61 110826.92 1230334.41];

L(5).r=[0.26130,0.65481,-0.06671];
L(5).m=0.14325;
L(5).Jm=2.2e-4;
L(5).I=10^(-9)*[328240.83 10409.66 -19760.38;
    10409.66 217596.66 -27141.63;
    -19760.38 -27141.63 313278.42];

L(6).r=[0.24833,0.54880,-0.03822];
L(6).m=3.03159;
L(6).Jm=2.2e-4;
L(6).I=10^(-9)*[19773.04 1895.11 5905.68;
    1895.11 14851.04 -2539.11;
    5905.68 -2539.11 22694.09];

robot = SerialLink(L); %SerialLink 类函数
robot.name='B09';


%机械臂的工作空间,关节3，5设置工作角度为[-90,90]
A=unifrnd(-pi,pi,[1,3000]);
B=unifrnd(-pi*3/4,pi*3/4,[1,3000]);
C=unifrnd(-pi/2,pi*3/4,[1,3000]);
D=unifrnd(-pi*3/4,3*pi/4,[1,3000]);
E=unifrnd(-pi/2,pi/2,[1,3000]);
F=unifrnd(-pi*3/4,pi*3/4,[1,3000]);

G=cell(3000,3);%建立元胞数组
for n=1:3000
    G{n}=[A(n) B(n) C(n) D(n) E(n) F(n)];
end                          %生成3000组随机点
H1=cell2mat(G);              %将元胞数组转化为矩阵         
T0=double(robot.fkine(H1));      %机械臂正解 

%% 运动学正解
theta2 = [0.1,0,0,0,0,0];   			%关节角
p1=robot.fkine(theta2)  ;     			%fkine正解函数，根据关节角theta，求解出末端位姿p
q1=ikine(robot,p1) ;           			%ikine逆解函数，根据末端位姿p，求解出关节角q

%已知初始点和终止点的位姿，五次多项式规划路径
T1=[ 0.5048   -0.7521    0.4236   -0.1557
   -0.7693   -0.1694    0.6160    0.0370
   -0.3915   -0.6369   -0.6641    0.3072
         0         0         0    1.0000
];
T2=[   -0.5736    0.5505    0.6066    0.1039
   -0.8132   -0.4712   -0.3415    0.4722
    0.0979   -0.6892    0.7180   -0.3047
         0         0         0    1.0000
];
init_ang=robot.ikine(T1);				%根据起始点位姿，得到起始点关节角
targ_ang=robot.ikine(T2);				%根据终止点位姿，得到终止点关节角

%轨迹规划方法并生成动画
time=0:0.01:2;
subplot(3,2,[1,3]); 					%subplot 对画面分区 三行两列 占用1到3的位置
f=3;
figure(f);
[q ,qd, qdd]=jtraj(init_ang,targ_ang,time);%五次多项式轨迹，得到关节角度，角速度，角加速度
grid on
T=robot.fkine(q(:,:,:));						%根据插值，得到末端执行器位姿
nT=T.T;
subplot(3,2,1);
plot3(squeeze(nT(1,4,:)),squeeze(nT(2,4,:)),squeeze(nT(3,4,:)));%输出末端轨迹
title('输出末端轨迹');

figure(f);
tau=robot.rne_dh(q,qd,qdd);
subplot(3,2,2);
plot(time,tau);grid on;title('关节力矩');
xlabel('t/s');
ylabel('tau/Nm');
legend('关节1','关节2','关节3','关节4','关节5','关节6','Location','bestoutside');
grid on;

figure(f)
subplot(3, 2, 3);
for i=1:6
    plot(time,q(:,i));
    hold on;
end
legend('关节1','关节2','关节3','关节4','关节5','关节6','Location','bestoutside');
title('q');
xlabel('t/s');
ylabel('q/rad');
grid on;

figure(f)
subplot(3, 2, 4);
for i=1:6
    plot(time,qd(:,i));
    hold on;
end
legend('关节1','关节2','关节3','关节4','关节5','关节6','Location','bestoutside');
title('速度');
xlabel('t/s');
ylabel('w/rad/s');
grid on;

figure(f)
subplot(3, 2, 5);
for i=1:6
    plot(time,qdd(:,i));
    hold on;
end
legend('关节1','关节2','关节3','关节4','关节5','关节6','Location','bestoutside');
title('加速度');
xlabel('t/s');
ylabel('a/(rad/s/s)');
grid on;









